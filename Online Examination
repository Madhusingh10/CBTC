import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;

class User {
    private String username;
    private String password;
    private String fullName;
    private int score;

    public User(String username, String password, String fullName) {
        this.username = username;
        this.password = password;
        this.fullName = fullName;
        this.score = 0;
    }

    public String getUsername() {
        return username;
    }

    public String getPassword() {
        return password;
    }

    public String getFullName() {
        return fullName;
    }

    public int getScore() {
        return score;
    }

    public void setPassword(String newPassword) {
        this.password = newPassword;
    }

    public void updateProfile(String newFullName) {
        this.fullName = newFullName;
    }

    public void increaseScore() {
        this.score++;
    }
}

class Question {
    private String questionText;
    private List<String> options;
    private int correctAnswerIndex;

    public Question(String questionText, List<String> options, int correctAnswerIndex) {
        this.questionText = questionText;
        this.options = options;
        this.correctAnswerIndex = correctAnswerIndex;
    }

    public String getQuestionText() {
        return questionText;
    }

    public List<String> getOptions() {
        return options;
    }

    public int getCorrectAnswerIndex() {
        return correctAnswerIndex;
    }
}

class Quiz {
    private List<Question> questions;
    private int currentIndex;

    public Quiz(List<Question> questions) {
        this.questions = questions;
        this.currentIndex = 0;
    }

    public Question getCurrentQuestion() {
        return questions.get(currentIndex);
    }

    public boolean hasNextQuestion() {
        return currentIndex < questions.size() - 1;
    }

    public void goToNextQuestion() {
        currentIndex++;
    }
}

public class Main {
    private static User currentUser;
    private static Quiz quiz;
    private static Timer timer;
    private static int timeLeft;

    public static void main(String[] args) {
        // Initialize questions and quiz
        List<Question> questions = new ArrayList<>();
        questions.add(new Question("What is 2 + 2?", List.of("3", "4", "5", "6"), 1));
        questions.add(new Question("What is the capital of France?", List.of("Berlin", "London", "Paris", "Madrid"), 2));

        quiz = new Quiz(questions);

        Scanner scanner = new Scanner(System.in);

        while (true) {
            if (currentUser == null) {
                System.out.println("Welcome to the Quiz App!");
                System.out.print("Enter your username: ");
                String username = scanner.nextLine();
                System.out.print("Enter your password: ");
                String password = scanner.nextLine();


                if (username.equals("test") && password.equals("test")) {
                    currentUser = new User(username, password, "Test User");
                    System.out.println("Login successful. Welcome, " + currentUser.getFullName() + "!");
                } else {
                    System.out.println("Invalid username or password. Please try again.");
                }
            } else {
                System.out.println("Logged in as " + currentUser.getFullName());
                System.out.println("Select an option:");
                System.out.println("1. Start Quiz");
                System.out.println("2. Update Profile");
                System.out.println("3. Update Password");
                System.out.println("4. Logout");

                int choice = scanner.nextInt();
                scanner.nextLine(); // Consume the newline character

                switch (choice) {
                    case 1:
                        startQuiz(scanner);
                        break;
                    case 2:
                        System.out.print("Enter your new full name: ");
                        String newFullName = scanner.nextLine();
                        currentUser.updateProfile(newFullName);
                        System.out.println("Profile updated successfully.");
                        break;
                    case 3:
                        System.out.print("Enter your new password: ");
                        String newPassword = scanner.nextLine();
                        currentUser.setPassword(newPassword);
                        System.out.println("Password updated successfully.");
                        break;
                    case 4:
                        currentUser = null;
                        timer.cancel();
                        System.out.println("Logout successful.");
                        break;
                    default:
                        System.out.println("Invalid option. Please try again.");
                }
            }
        }
    }

    private static void startQuiz(Scanner scanner) {
        System.out.println("Starting the quiz...");
        timer = new Timer();
        timeLeft = 60;

        timer.scheduleAtFixedRate(new TimerTask() {
            public void run() {
                if (timeLeft > 0) {
                    System.out.println("Time left: " + timeLeft + " seconds");
                    timeLeft--;
                } else {
                    endQuiz();
                }
            }
        }, 0, 1000);

        while (quiz.hasNextQuestion()) {
            Question currentQuestion = quiz.getCurrentQuestion();
            System.out.println(currentQuestion.getQuestionText());
            List<String> options = currentQuestion.getOptions();
            for (int i = 0; i < options.size(); i++) {
                System.out.println((i + 1) + ". " + options.get(i));
            }

            System.out.print("Enter your answer (1-" + options.size() + "): ");
            int userAnswer = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            if (userAnswer == currentQuestion.getCorrectAnswerIndex() + 1) {
                currentUser.increaseScore();
                System.out.println("Correct!");
            } else {
                System.out.println("Incorrect.");
            }

            quiz.goToNextQuestion();
        }

        endQuiz();
    }

    private static void endQuiz() {
        timer.cancel();
        System.out.println("Quiz ended. Your score: " + currentUser.getScore());
        currentUser = null;
    }
}
